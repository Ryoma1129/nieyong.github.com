[[bluetooth essentials for programmers]]

[[TI CC254x develop]]

[[BLE Overview]]

[[TI BLE Protocol Stack]]

[[BLE速率问题]]

BLE协议只有2.1Kbps的传输速率，如果做音乐等音频数据传输，差的也要64Kbps。

模块会根据数据包大小
自动分包发送,每个无线包最大载荷为 20 个字节。移动设备方发往模块的数据包,必须自 行分包(1-20 字节/包)发送。

模块的蓝牙 默认连接间隔为 20 ms,如果需要节省功耗采用低速转发模式,需通过 AT 指令调整连接间隔(最长连接间隔 2000ms),每个连接间隔最多传输 80 个字节



== Bluetooth笔记 ==

* Dual-mode bluetooth:Devices that can support BR and BLE are referred to as “dual-mode” devices. Typically in a Bluetooth system, a mobile phone or laptop computer will be a dual-mode device. 
* Single-mode bluetooth:Devices that only support BLE are referred to as “single-mode” devices. These single-mode devices are generally used for application in which low power consumption is a primary concern, such as those that run on coin cell batteries.The CC2540 is a certified single-mode Bluetooth low energy  device. 

可以开发ble应用的手机需要满足的条件。

In order to write an application on a smartphone that can communicate with the CC2540, the smartphone must:
* Contain hardware that supports dual-mode Bluetooth (traditional BT and Bluetooth low energy)
* Have some kind of support in their SDK for using the Bluetooth low energy


== 固定／可变连接时间间隔 ==
标准蓝牙技术是一种“面向连接”的无线技术,具有固定的连接时间间隔。相反,蓝牙低能耗技术采用可变连接时间间隔,这个间隔根据具体应用可以设置为几毫秒到几秒不等。

== 快速的连接方式 ==
另外,因为BLE技术采用非常快速的连接方式,因此平时可以 处于“非连接”状态(节省能源),此时链路两端相互间只是知晓对方,只有在必要时才开启链路,然后 在尽可能短的时间内关闭链路。

== ble的三大ULP特征 ==
蓝牙低能耗技术的三大特性成就了ULP性能,这三大特性分别是：
* 最大化的待机时间
* 快速连接
* 低峰值的发送/接收功耗。

== ble最小化无线开启时间的技巧 ==
=== 使用3个广告信道 ===
蓝牙低能耗技术最小化无线开启时间的第一个技巧是仅用3个“广告”信道搜索其它设备,或向寻求建立连接的设备宣告自身存在。相比之下,标准蓝牙技术使用了32个信道。这意味着蓝牙低能耗技术扫描其它设备只需“开启”0.6至1.2ms时间,而标准蓝牙技术需要22.5ms时间来扫描它的32个信道。

=== 使用37个数据信道 ===
连接成功后,蓝牙低能耗技术就会切换到37个数据信道之一。在短暂的数据传送期间,无线信号将使用标准蓝牙技术倡导的自适应跳频(AFH)技术以伪随机的方式在信道间切换，标准蓝牙技术使用79个数据信道。

=== 使用更大的原始数据带宽 ===
蓝牙低能耗技术无线开启时间最短的另一个原因是它具有1Mbps的原始数据带宽，更大的带宽允许在更短的时间内发送更多的信息。

蓝牙低能耗技术“完成”一次连接(即扫描其它设备、建立链路、发送数据、认证和适当地结束)只需3ms。

== ble限制峰值功耗 ==
=== 采用更加“宽松的”射频参数 ===
两种技术都使用高斯频移键控(GFSK)调制,但蓝牙低能耗技术使用的调制指数是0.5,而标准蓝牙技术是0.35。0.5的指数接近高斯最小频移键控(GMSK)方案,可以降低无线设备的功耗要求。

=== 发送很短的数据包 ===
发送较长的数据包->无线设备在相对较高的功耗状态保持更长的时间->硅片发热->改变材料的物理特性->改变传送频率(中断链路)->频繁地对无线设备进行再次校准->再次校准将消耗更多的功率(并且要求闭环架构, 使得无线设备更加复杂,从而推高设备价格)。


